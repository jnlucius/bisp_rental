import Head from "next/head";
import Image from "next/image";
import { Inter } from "@next/font/google";
import Layout from "@/components/layout";
import Post from "../components/post";
import useSWR from "swr";
import { getPosts } from "../lib/getPosts";
import Link from "next/link";
import { useState } from "react";
import { PrismaClient } from "@prisma/client";
import prisma from "../lib/prisma";
import dynamic from "next/dynamic";
import { Container } from "react-bootstrap";

const inter = Inter({ subsets: ["latin"] });

export async function getStaticProps() {
  const postData = await prisma.post.findMany({
    where: {
      published: true,
    },
  });
  return {
    props: { postData },
    revalidate: 10,
  };
}

export default function Home({ postData }) {
  const [query, setQuery] = useState("");
  const [furniture, setFurniture] = useState(false);
  const [appliances, setAppliances] = useState(false);

  const posts = postData;

  const searchFilter = (array) => {
    return array.filter((el) => el.title.toLowerCase().includes(query));
  };

  const furnitureFilter = (array) => {
    return furniture ? array.filter((post) => post.furniture) : array;
  };

  const appliancesFilter = (array) => {
    return appliances ? array.filter((post) => post.appliances) : array;
  };
  const handleChange = (e) => {
    setQuery(e.target.value);
  };

  const handleFurniture = () => {
    setFurniture(!furniture);
  };

  const handleAppliances = () => {
    setAppliances(!appliances);
  };

  const filteredPosts = appliancesFilter(furnitureFilter(searchFilter(posts)));

  const MapWithNoSSR = dynamic(() => import("../components/Map"), {
    ssr: false,
  });
  return (
    <Layout home>
      <Head>
        <title>Rentals</title>
        <meta name="description" content="Generated by create next app" />
        <meta name="viewport" content="width=device-width, initial-scale=1" />
        <link rel="icon" href="/favicon.ico" />
      </Head>

      <div className="mb-3">
        <input
          className="form-control"
          onChange={handleChange}
          type="text"
          placeholder="Search..."
        />
      </div>
      <div className="form-check">
        <input
          onChange={(e) => setFurniture(!furniture)}
          className="form-check-input"
          type="checkbox"
          defaultChecked={furniture}
          id="furnCheck"
        />
        <label class="form-check-label" for="furnCheck">
          Furniture
        </label>
      </div>
      <div className="form-check">
        <input
          onChange={(e) => setAppliances(!appliances)}
          className="form-check-input"
          placeholder="Appliances"
          type="checkbox"
          defaultChecked={appliances}
          id="aplCheck"
        />
        <label class="form-check-label" for="aplCheck">
          Appliances
        </label>
      </div>

      <h3>Map View</h3>

      <MapWithNoSSR data={filteredPosts} />

      <h3>Recent posts:</h3>
      {filteredPosts.map((post) => (
        <Link key={post.id} href={`/posts/${post.id}`}>
          <Post db={post} />
        </Link>
      ))}
    </Layout>
  );
}
